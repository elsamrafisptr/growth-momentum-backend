"""Set some profile column to string type

Revision ID: e3e020f94fde
Revises: 990431e0b469
Create Date: 2024-10-20 17:10:24.998273

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e3e020f94fde'
down_revision = '990431e0b469'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.alter_column('job_type',
               existing_type=postgresql.ENUM('STUDENT', 'WORKER', 'EDUCATOR', 'OTHER', name='jobtype'),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('activity_level',
               existing_type=postgresql.ENUM('LOW', 'MODERATE', 'HIGH', name='activitylevel'),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('MALE', 'FEMALE', name='gender'),
               type_=sa.String(length=128),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.String(length=128),
               type_=postgresql.ENUM('MALE', 'FEMALE', name='gender'),
               existing_nullable=False)
        batch_op.alter_column('activity_level',
               existing_type=sa.String(length=128),
               type_=postgresql.ENUM('LOW', 'MODERATE', 'HIGH', name='activitylevel'),
               existing_nullable=False)
        batch_op.alter_column('job_type',
               existing_type=sa.String(length=128),
               type_=postgresql.ENUM('STUDENT', 'WORKER', 'EDUCATOR', 'OTHER', name='jobtype'),
               existing_nullable=False)

    # ### end Alembic commands ###
